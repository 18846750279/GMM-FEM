CC=g++
LD=g++
MM=g++

# DEBUG = 0
# PROFILE = 0

BINDIR = ./bin
BUILDDIR = ./build
SRCDIR = ./src
COMMONDIR = $(SRCDIR)/common
TESTDIR = $(SRCDIR)/test
MEXDIR = $(SRCDIR)/mex
CMDDIR = $(SRCDIR)/cmd

CXXFLAGS=-I$(SRCDIR)/common -fPIC --std=c++11 -pedantic
ifdef DEBUG
CXXFLAGS:=$(CXXFLAGS) -g -O0 -DMAS_DEBUG
else
CXXFLAGS:=$(CXXFLAGS) -O3
endif

MMFLAGS:=$(CXXFLAGS) -MM
LDFLAGS:= -pthread

ifdef PROFILE
CXXFLAGS:=$(CXXFLAGS) -pg
LDFLAGS:=$(LDFLAGS) -pg
endif

# Library extension
ifndef LIB_EXT
LIB_EXT:=dylib
endif

# Matlab
# Matlab folders
ifndef MATLAB_ROOT

# Guess where matlab root is
MATLAB_GUESS:=$(lastword $(wildcard /Applications/MATLAB_*.app))
ifeq (,$(MATLAB_GUESS))
$(error Cannot find MATLAB, re-run make by passing a MATLAB root folder: make -f Makefile.windows MATLAB_ROOT=<pathname>)
endif
MATLAB_ROOT:=$(MATLAB_GUESS)

endif

ifndef MATLAB_BINDIR
MATLAB_BINDIR:="$(MATLAB_ROOT)/bin/maci64"
endif

ifndef MEX_EXT
MEX_EXT:=mexmaci64
endif

ifndef MATLAB_INCLUDEDIR
MATLAB_INCLUDEDIR:="$(MATLAB_ROOT)/extern/include"
endif

MEX_CXXFLAGS:=$(CXXFLAGS) -I$(MEXDIR) -DMX_COMPAT_32 -DMATLAB_MEX_FILE -I"$(MATLAB_INCLUDEDIR)" -Wall
MEX_LDFLAGS:= $(LDFLAGS) -shared -L"$(MATLAB_BINDIR)" -lstdc++ -lmex -lmx -lmat
MEX_MMFLAGS:=$(MEX_CXXFLAGS) -MM

# source file definitions
-include Makefile.sources

COMMON_DEPS := $(patsubst $(COMMONDIR)/%.cxx, $(BUILDDIR)/%.d, $(COMMON_SOURCES))
COMMON_OBJECTS := $(patsubst $(COMMONDIR)/%.cxx, $(BUILDDIR)/%.o, $(COMMON_SOURCES))

MEX_DEPS = $(patsubst $(MEXDIR)/%.cxx, $(BUILDDIR)/%.mexd, $(MEX_SOURCES))
MEX_OBJECTS = $(patsubst $(MEXDIR)/%.cxx, $(BUILDDIR)/%.mexo, $(MEX_SOURCES))

CMD_DEPS =  $(patsubst $(CMDDIR)/%.cxx, $(BUILDDIR)/%.cmdd, $(CMD_SOURCES))
CMD_OBJECTS =  $(patsubst $(CMDDIR)/%.cxx, $(BUILDDIR)/%.cmdo, $(CMD_SOURCES))

TEST_DEPS := $(patsubst $(TESTDIR)/%.cxx, $(BUILDDIR)/%.td, $(TEST_SOURCES))
TEST_OBJECTS := $(patsubst $(TESTDIR)/%.cxx, $(BUILDDIR)/%.to, $(TEST_SOURCES))

# Generated outputs, remove _mex and _cmd from filenames
MEX = $(patsubst $(MEXDIR)/%_mex.cxx, $(BINDIR)/%.$(MEX_EXT), $(MEX_SOURCES))
CMD =  $(patsubst $(SRCDIR)/%_cmd.cxx, $(BINDIR)/%, $(CMD_SOURCES))
TEST_CMD := $(patsubst $(TESTDIR)/%.cxx, $(BINDIR)/%, $(TEST_SOURCES))
M_FILES_OUT := $(patsubst $(MEXDIR)/%.m, $(BINDIR)/%.m, $(M_FILES))

# Common library
COMMON_LIB := $(BINDIR)/maslib.$(LIB_EXT)

# Commands
MKDIR_CMD=mkdir -p $(@D)
RM_CMD=rm -rf

default: mex

cleanup:
	$(RM_CMD) $(COMMON_OBJECTS) $(COMMON_DEPS) $(MEX_OBJECTS) $(MEX_DEPS) $(CMD_OBJECTS) $(CMD_DEPS) $(TEST_OBJECTS) $(TEST_DEPS)

clean: cleanup
	$(RM_CMD) $(MEX) $(CMD) $(TEST_CMD) $(M_FILES_OUT) $(COMMON_LIB)

# do not delete intermediates
.SECONDARY:

vars:
	@echo "MATLAB_ROOT: $(MATLAB_ROOT)"
	@echo "CXXFLAGS: $(CXXFLAGS)"
	@echo "COMMON_SOURCES: $(COMMON_SOURCES)"
	@echo "COMMON_OBJECTS: $(COMMON_OBJECTS)"
	@echo "MEX_OBJECTS: $(MEX_OBJECTS)"
	@echo "MEX_CXXFLAGS: $(MEX_CXXFLAGS)"
	@echo "MEX_LDFLAGS: $(MEX_LDFLAGS)"
	@echo "MEX: $(MEX)"
	@echo "CMD: $(CMD)"
	@echo "CMD_SOURCES: $(CMD_SOURCES)"
	@echo "CMD_OBJECTS: $(CMD_OBJECTS)"
	@echo "CMD: $(CMD)"
	@echo "TEST_OBJECTS: $(TEST_OBJECTS)"
	@echo "TEST_CMD: $(TEST_CMD)"	

all: cmd lib mex test

doc:
	@doxygen doc/maslib.doxyfile

mex: $(MEX) $(M_FILES_OUT)

cmd: $(CMD)

lib: $(COMMON_LIB)

test: $(TEST_CMD)

deps: $(COMMON_DEPS) $(MEX_DEPS) $(CMD_DEPS) $(TEST_DEPS)

# include dependency rules	
-include $(COMMON_DEPS)
-include $(MEX_DEPS)
-include $(CMD_DEPS)
-include $(TEST_DEPS)
	
# DEPENDENCIES
$(BUILDDIR)/%.d: $(COMMONDIR)/%.cxx
	@$(MKDIR_CMD)
	@echo Updating dependencies $@...
	@$(MM) $(MMFLAGS) -MT $(@:.d=.o) $< >> $@

$(BUILDDIR)/%.mexd: $(MEXDIR)/%.cxx
	@$(MKDIR_CMD)
	@echo Updating dependencies $@...
	@$(MM) $(MEX_MMFLAGS) -MT $(@:.mexd=.mexo) $< >> $@

$(BUILDDIR)/%.cmdd: $(CMDDIR)/%.cxx
	@$(MKDIR_CMD)
	@echo Updating dependencies $@...
	@$(MM) $(MMFLAGS) -MT $(@:.cmdd=.cmdo) $< >> $@
	
$(BUILDDIR)/%.td: $(TESTDIR)/%.cxx
	@$(MKDIR_CMD)
	@echo Updating dependencies $@...
	@$(MM) $(MMFLAGS) -MT $(@:.td=.to) $< >> $@

# OBJECTS

$(BUILDDIR)/%.o: $(COMMONDIR)/%.cxx
	@echo Compiling $@...
	@$(CC) $(CXXFLAGS) -o $@ -c $<

$(BUILDDIR)/%.mexo: $(MEXDIR)/%.cxx
	@echo Compiling $@...
	@$(CC) $(MEX_CXXFLAGS) -o $@ -c $<

$(BUILDDIR)/%.cmdo: $(CMDDIR)/%.cxx
	@echo Compiling $@...
	@$(CC) $(CXXFLAGS) -o $@ -c $<
	
$(BUILDDIR)/%.to: $(TESTDIR)/%.cxx
	@echo Compiling $@...
	@$(CC) $(CXXFLAGS) -o $@ -c $<

# Matlab
$(BINDIR)/%.$(MEX_EXT): $(BUILDDIR)/%_mex.mexo $(COMMON_OBJECTS)
	@$(MKDIR_CMD)
	@echo Assembling $@ ...
	@$(LD) -o $@ $(MEX_LDFLAGS) $(COMMON_OBJECTS) $<
	
$(BINDIR)/%.m: $(MEXDIR)/%.m
	@$(MKDIR_CMD)
	@echo Copying $@ ...
	@cp $< $@

# Command-line programs
		
$(BINDIR)/%: $(BUILDDIR)/%_cmd.cmdo $(COMMON_OBJECTS)
	@$(MKDIR_CMD)
	@echo Assembling $@ ...
	@$(LD) -o $@ $(LDFLAGS) $(COMMON_OBJECTS) $<
	
$(BINDIR)/%: $(BUILDDIR)/%.to $(COMMON_OBJECTS)
	@$(MKDIR_CMD)
	@echo Assembling $@ ...
	@$(LD) -o $@ $(LDFLAGS) $(COMMON_OBJECTS) $<
	
$(LIB) : $(COMMON_OBJECTS)
	@$(MKDIR_CMD)
	@echo Assembling $@ ...
	@$(LD) -o $@ $(LDFLAGS) -fPIC -shared $(COMMON_OBJECTS)
