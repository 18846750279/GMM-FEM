CC=g++
LD=g++
MM=g++

# DEBUG = 0
# PROFILE = 0

BUILDDIR = ./build
SRCDIR = ./src
TET_DIR = ./tetgen
INCLUDEDIR = $(TET_DIR)
BINDIR = ./bin

CXXFLAGS=-I$(INCLUDEDIR) -fPIC --std=c++11 -pedantic -DPTR_EXCEEDS_LONG -DTETLIBRARY
ifdef DEBUG
CXXFLAGS:=$(CXXFLAGS) -g -O0
else
CXXFLAGS:=$(CXXFLAGS) -O3
endif

MMFLAGS:=$(CXXFLAGS) -MM
LDFLAGS:=

ifdef PROFILE
CXXFLAGS:=$(CXXFLAGS) -pg
LDFLAGS:=$(LDFLAGS) -pg
endif

# Library extension
ifndef LIB_EXT
LIB_EXT:=dylib
endif

# Matlab
# Matlab folders
ifndef MATLAB_ROOT

# Guess where matlab root is
MATLAB_GUESS:=$(lastword $(wildcard /Applications/MATLAB_*.app))
ifeq (,$(MATLAB_GUESS))
$(error Cannot find MATLAB, re-run make by passing a MATLAB root folder: make -f Makefile.windows MATLAB_ROOT=<pathname>)
endif
MATLAB_ROOT:=$(MATLAB_GUESS)

endif

ifndef MATLAB_BINDIR
MATLAB_BINDIR:="$(MATLAB_ROOT)/bin/maci64"
endif

ifndef MEX_EXT
MEX_EXT:=mexmaci64
endif

ifndef MATLAB_INCLUDEDIR
MATLAB_INCLUDEDIR:="$(MATLAB_ROOT)/extern/include"
endif

MEX_CXXFLAGS:=$(CXXFLAGS) -DMX_COMPAT_32 -DMATLAB_MEX_FILE -I"$(MATLAB_INCLUDEDIR)" -Wall
MEX_LDFLAGS:= $(LDFLAGS) -shared -L"$(MATLAB_BINDIR)" -lstdc++ -lmex -lmx -lmat
MEX_MMFLAGS:=$(MEX_CXXFLAGS) -MM

MEX_SOURCES = $(SRCDIR)/tetgen_mex.cxx
MEX_OBJECTS = $(BUILDDIR)/tetgen_mex.mexo
MEX_DEPS = $(patsubst $(SRCDIR)/%.cxx, $(BUILDDIR)/%.mexd, $(MEX_SOURCES))
MEX = $(BINDIR)/tetgen.$(MEX_EXT)

MFILES := $(BINDIR)/tetgen.m
SOURCES := $(TET_DIR)/predicates.cxx $(TET_DIR)/tetgen.cxx 
DEPS := $(patsubst $(TET_DIR)/%.cxx, $(BUILDDIR)/%.d, $(SOURCES))
OBJECTS := $(BUILDDIR)/predicates.o $(BUILDDIR)/tetgen.o

MKDIR_CMD=mkdir -p $(@D)
RM_CMD=rm -rf

default: all

cleanup:
	$(RM_CMD) $(DEPS) $(OBJECTS) $(MEX_DEPS) $(MEX_OBJECTS)

clean: cleanup
	$(RM_CMD) $(MEX) $(MFILES)

# do not delete intermediates
.SECONDARY:

vars:
	@echo "MEX_SOURCES: $(MEX_SOURCES)"
	@echo "MEX_DEPS: $(MEX_DEPS)"
	@echo "MEX_OBJECTS: $(MEX_OBJECTS)"
	@echo "MEX_CXXFLAGS: $(MEX_CXXFLAGS)"
	@echo "MEX_LDFLAGS: $(MEX_LDFLAGS)"
	@echo "MEX: $(MEX)"
	@echo "MFILES: $(MFILES)"
	@echo "SOURCES: $(SOURCES)"
	@echo "DEPS: $(DEPS)"
	@echo "OBJECTS: $(OBJECTS)"
	

all: mex

deps: $(DEPS) $(MEX_DEPS)

mex: $(MEX) $(MFILES)

# include dependency rules	
-include $(DEPS)
-include $(MEX_DEPS)

# DEPENDENCIES
$(BUILDDIR)/%.d: $(TET_DIR)/%.cxx
	@$(MKDIR_CMD)
	@echo Updating dependencies $@...
	@$(MM) $(MMFLAGS) -MT $(@:.d=.o) $< >> $@

$(BUILDDIR)/%.mexd: $(SRCDIR)/%.cxx
	@$(MKDIR_CMD)
	@echo Updating dependencies $@...
	@$(MM) $(MEX_MMFLAGS) -MT $(@:.mexd=.mexo) $< >> $@

# OBJECTS
$(BUILDDIR)/%.o: $(TET_DIR)/%.cxx
	@echo Compiling $@...
	@$(CC) $(CXXFLAGS) -o $@ -c $<

$(BUILDDIR)/%.mexo: $(SRCDIR)/%.cxx
	@echo Compiling $@...
	@$(CC) $(MEX_CXXFLAGS) -o $@ -c $<

# BINARIES
$(BINDIR)/%.$(MEX_EXT): $(BUILDDIR)/%_mex.mexo $(OBJECTS)
	@$(MKDIR_CMD)
	@echo Assembling $@ ...
	@$(LD) -o $@ $(MEX_LDFLAGS) $(OBJECTS) $<
	
$(BINDIR)/%.m: $(SRCDIR)/%.m
	@$(MKDIR_CMD)
	@echo Copying $@ ...
	@cp $< $@

